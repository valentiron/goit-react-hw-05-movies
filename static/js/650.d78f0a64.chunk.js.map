{"version":3,"file":"static/js/650.d78f0a64.chunk.js","mappings":"uQAAA,IAAMA,EAAW,gCACXC,EAAU,mCAkCT,SAASC,IACZ,OAAOC,MAAM,GAAD,OAAIH,EAAJ,oCAAwCC,IACjDG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACZ,CAEM,SAASC,EAAgBC,GAC9B,OAAOL,MAAM,GAAD,OAAIH,EAAJ,gCAAoCC,EAApC,kBAAqDO,IAC9DJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACZ,CAEM,SAASG,EAAgBC,GAC9B,OAAOP,MAAM,GAAD,OAAIH,EAAJ,kBAAsBU,EAAtB,oBAAyCT,IAClDG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACZ,CAEM,SAASK,EAAoBD,GAClC,OAAOP,MAAM,GAAD,OAAIH,EAAJ,kBAAsBU,EAAtB,4BAAiDT,IAC1DG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACZ,CAEM,SAASM,EAAuBF,GACrC,OAAOP,MAAM,GAAD,OAAIH,EAAJ,kBAAsBU,EAAtB,4BAAiDT,IAC1DG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACZ,C,8ECRH,UA7CyB,WACvB,IAAQI,GAAYG,EAAAA,EAAAA,MAAZH,QACR,GAA+CI,EAAAA,EAAAA,UAAS,MAAxD,eAAOC,EAAP,KAAyBC,EAAzB,KAcA,IAZAC,EAAAA,EAAAA,YAAU,YACRN,EAAAA,EAAAA,IAAoBD,GACjBN,MAAK,SAAAC,GACAA,EAAIa,KACNF,EAAmBX,EAAIa,MAEvBC,QAAQC,IAAI,sBAAuBf,EAEtC,IACAgB,OAAM,SAAAC,GAAK,OAAIH,QAAQC,IAAIE,EAAhB,GACf,GAAE,CAACZ,IAECK,EAIL,OACE,+BACE,wBACGA,EAAiBQ,KAAI,SAAAC,GACpB,IAAQC,EAAsCD,EAAtCC,GAAIC,EAAkCF,EAAlCE,KAAMC,EAA4BH,EAA5BG,UAAWC,EAAiBJ,EAAjBI,aACzBC,EAAU,yCAAqCD,GAOnD,OALKA,IACHC,EACE,yFAIF,2BACE,gBAAKC,IAAKD,EAAYE,IAAKL,EAAMM,MAAM,SACvC,uBAAIN,KACJ,uBAAIC,MAHGF,EAMZ,OAIR,C","sources":["api/api.js","components/MovieDetailsCast/MovieDetailsCast.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '0021cd5d6cc61e1e538bcb0b8bcd461c';\n\n// export function getMoviesInfo(typeQuery, movieId, searchQuery) {\n//   let options;\n//   let queryVariants = '';\n\n//   switch (typeQuery) {\n//     case 'search':\n//       options = `search/movie`;\n//       queryVariants = `&query=${searchQuery}`;\n//       break;\n\n//     case 'details':\n//       options = `/movie/${movieId}`;\n//       break;\n\n//     case 'cast':\n//       options = `/movie/${movieId}/credits`;\n//       break;\n\n//     case 'reviews':\n//       options = `/movie/${movieId}/reviews`;\n\n//     case 'trend':\n//       options = `trending/all/day`;\n\n//     default:\n//       console.log('Not valid type of query');\n//   }\n\n//   return fetch(`${BASE_URL}${options}?api_key=${API_KEY}${queryVariants}`).then(res => res.json());\n// }\n\n\nexport function getTrendingMovies() {\n    return fetch(`${BASE_URL}trending/all/day?api_key=${API_KEY}`)\n      .then(res => res.json());\n  };\n  \n  export function getSearchMovies(searchQuery) {\n    return fetch(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${searchQuery}`)\n      .then(res => res.json());\n  };\n  \n  export function getMovieDetails(movieId) {\n    return fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n      .then(res => res.json());\n  };\n  \n  export function getMovieDetailsCast(movieId) {\n    return fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`)\n      .then(res => res.json());\n  };\n  \n  export function getMovieDetailsReviews(movieId) {\n    return fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`)\n      .then(res => res.json());\n  };\n","import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { getMovieDetailsCast } from '../../api/api';\n\nconst MovieDetailsCast = () => {\n  const { movieId } = useParams();\n  const [movieDetailsCast, isMovieDetailsCast] = useState(null);\n\n  useEffect(() => {\n    getMovieDetailsCast(movieId)\n      .then(res => {\n        if (res.cast) {\n          isMovieDetailsCast(res.cast);\n        } else {\n          console.log('There is no results', res);\n        }\n      })\n      .catch(error => console.log(error));\n  }, [movieId]);\n\n  if (!movieDetailsCast) {\n    return;\n  }\n\n  return (\n    <>\n      <ul>\n        {movieDetailsCast.map(item => {\n          const { id, name, character, profile_path } = item;\n          let profileImg = `https://image.tmdb.org/t/p/w500${profile_path}`;\n\n          if (!profile_path) {\n            profileImg =\n              'https://img.freepik.com/free-vector/neon-style-coming-soon-background_1017-33735.jpg';\n          }\n\n          return (\n            <li key={id}>\n              <img src={profileImg} alt={name} width=\"120\" />\n              <p>{name}</p>\n              <p>{character}</p>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\n\nexport default MovieDetailsCast;"],"names":["BASE_URL","API_KEY","getTrendingMovies","fetch","then","res","json","getSearchMovies","searchQuery","getMovieDetails","movieId","getMovieDetailsCast","getMovieDetailsReviews","useParams","useState","movieDetailsCast","isMovieDetailsCast","useEffect","cast","console","log","catch","error","map","item","id","name","character","profile_path","profileImg","src","alt","width"],"sourceRoot":""}