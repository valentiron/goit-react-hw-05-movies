{"version":3,"file":"static/js/268.46ee1510.chunk.js","mappings":"uQAAA,IAAMA,EAAW,gCACXC,EAAU,mCAkCT,SAASC,IACZ,OAAOC,MAAM,GAAD,OAAIH,EAAJ,oCAAwCC,IACjDG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACZ,CAEM,SAASC,EAAgBC,GAC9B,OAAOL,MAAM,GAAD,OAAIH,EAAJ,gCAAoCC,EAApC,kBAAqDO,IAC9DJ,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACZ,CAEM,SAASG,EAAgBC,GAC9B,OAAOP,MAAM,GAAD,OAAIH,EAAJ,kBAAsBU,EAAtB,oBAAyCT,IAClDG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACZ,CAEM,SAASK,EAAoBD,GAClC,OAAOP,MAAM,GAAD,OAAIH,EAAJ,kBAAsBU,EAAtB,4BAAiDT,IAC1DG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACZ,CAEM,SAASM,EAAuBF,GACrC,OAAOP,MAAM,GAAD,OAAIH,EAAJ,kBAAsBU,EAAtB,4BAAiDT,IAC1DG,MAAK,SAAAC,GAAG,OAAIA,EAAIC,MAAR,GACZ,C,2ECzDH,EAAuB,yBAAvB,EAAuD,yB,SCE1CO,EAAa,SAAC,GAAoB,IAAlBC,EAAiB,EAAjBA,WACrBC,GAAWC,EAAAA,EAAAA,MAEjB,OACE,eAAIC,UAAWC,EAAf,SACGJ,EAAWK,KAAI,SAAAC,GAAI,OAClB,yBACE,UAAC,KAAD,CAAMH,UAAWC,EAAUG,GAAE,kBAAaD,EAAKE,IAAMC,MAAO,CAACC,KAAMT,GAAnE,UAA+EK,EAAKK,OAASL,EAAKM,KAAlG,QADON,EAAKE,GADI,KAOzB,C,2GCHC,EAZiB,SAAC,GAAkB,IAAhBK,EAAe,EAAfA,SAClB,OACE,kBAAMA,SAAU,SAAAC,GAAK,OAAID,EAASC,EAAb,EAArB,WACE,kBACEC,KAAK,OACLH,KAAK,UAEP,mBAAQG,KAAK,SAAb,sBAGL,E,iBC4BH,EAhCe,WACb,OAAqCC,EAAAA,EAAAA,UAAS,IAA9C,eAAOtB,EAAP,KAAoBuB,EAApB,KACA,GAAmCD,EAAAA,EAAAA,UAAS,IAA5C,eAAOhB,EAAP,KAAmBkB,EAAnB,KACA,GAAqCC,EAAAA,EAAAA,MAArC,eAAOC,EAAP,KAAoBC,EAApB,KAqBA,OAVAC,EAAAA,EAAAA,YAAU,WACRL,EAAcG,EAAYG,IAAI,UAE1B7B,IACFD,EAAAA,EAAAA,IAAgBC,GAAaJ,MAAK,SAAAC,GAChC2B,EAAa3B,EAAIiC,QAClB,GAEJ,GAAE,CAAC9B,EAAa0B,KAGf,gCACI,SAAC,EAAD,CAAWP,SArBjB,SAAwBC,GACtBA,EAAMW,iBAEN,IAAMC,EAAeZ,EAAMa,OAAOf,KAAKgB,MAEvCX,EAA+B,KAAjBS,EAAsBA,EAAe,IACnDL,EAA+B,KAAjBK,EAAsB,CAAEG,MAAOH,GAAiB,CAAC,EAChE,IAeM1B,EAAW8B,OAAS,GAAKpC,IAAe,SAACK,EAAA,EAAD,CAAYC,WAAYA,MAGxE,C","sources":["api/api.js","webpack://goit-react-hw-05-movies/./src/components/MoviesList/MoviesList.module.css?de3d","components/MoviesList/MoviesList.jsx","components/SearchBox/SearchBox.jsx","pages/Movies/Movies.jsx"],"sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3/';\nconst API_KEY = '0021cd5d6cc61e1e538bcb0b8bcd461c';\n\n// export function getMoviesInfo(typeQuery, movieId, searchQuery) {\n//   let options;\n//   let queryVariants = '';\n\n//   switch (typeQuery) {\n//     case 'search':\n//       options = `search/movie`;\n//       queryVariants = `&query=${searchQuery}`;\n//       break;\n\n//     case 'details':\n//       options = `/movie/${movieId}`;\n//       break;\n\n//     case 'cast':\n//       options = `/movie/${movieId}/credits`;\n//       break;\n\n//     case 'reviews':\n//       options = `/movie/${movieId}/reviews`;\n\n//     case 'trend':\n//       options = `trending/all/day`;\n\n//     default:\n//       console.log('Not valid type of query');\n//   }\n\n//   return fetch(`${BASE_URL}${options}?api_key=${API_KEY}${queryVariants}`).then(res => res.json());\n// }\n\n\nexport function getTrendingMovies() {\n    return fetch(`${BASE_URL}trending/all/day?api_key=${API_KEY}`)\n      .then(res => res.json());\n  };\n  \n  export function getSearchMovies(searchQuery) {\n    return fetch(`${BASE_URL}search/movie?api_key=${API_KEY}&query=${searchQuery}`)\n      .then(res => res.json());\n  };\n  \n  export function getMovieDetails(movieId) {\n    return fetch(`${BASE_URL}/movie/${movieId}?api_key=${API_KEY}`)\n      .then(res => res.json());\n  };\n  \n  export function getMovieDetailsCast(movieId) {\n    return fetch(`${BASE_URL}/movie/${movieId}/credits?api_key=${API_KEY}`)\n      .then(res => res.json());\n  };\n  \n  export function getMovieDetailsReviews(movieId) {\n    return fetch(`${BASE_URL}/movie/${movieId}/reviews?api_key=${API_KEY}`)\n      .then(res => res.json());\n  };\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MoviesList_list__0Owr9\",\"item\":\"MoviesList_item__eePYv\"};","import { Link, useLocation } from 'react-router-dom';\nimport css from './MoviesList.module.css'\n\nexport const MoviesList = ({ moviesList }) => {\n  const location = useLocation();\n\n  return (\n    <ul className={css.list}>\n      {moviesList.map(item => (\n        <li key={item.id}>\n          <Link className={css.item} to={`/movies/${item.id}`} state={{from: location}}>{item.title || item.name} </Link>\n        </li>\n      ))}\n    </ul>\n  );\n};  \n\n"," const SearchBox = ({ onSubmit }) => {\n    return (\n      <form onSubmit={event => onSubmit(event)}>\n        <input\n          type=\"text\"\n          name=\"name\"\n        />\n        <button type=\"submit\">Search</button>\n      </form>\n    );\n  };  \n\n  export default SearchBox;","import { useState, useEffect } from 'react';\nimport { getSearchMovies } from '../../api/api';\nimport  SearchBox  from '../../components/SearchBox/SearchBox';\nimport { MoviesList } from '../../components/MoviesList/MoviesList';\nimport { useSearchParams } from 'react-router-dom';\n\nconst Movies = () => {\n  const [searchQuery, isSearchQuery] = useState('');\n  const [moviesList, isMoviesList] = useState([]);\n  const [searchParam, isSearchParam] = useSearchParams();\n\n  function onSearchSubmit(event) {\n    event.preventDefault();\n\n    const currentQuery = event.target.name.value;\n\n    isSearchQuery(currentQuery !== '' ? currentQuery : '');\n    isSearchParam(currentQuery !== '' ? { query: currentQuery } : {});\n  }\n\n  useEffect(() => {\n    isSearchQuery(searchParam.get('query'));\n\n    if (searchQuery) {\n      getSearchMovies(searchQuery).then(res => {\n        isMoviesList(res.results);\n      });\n    }\n  }, [searchQuery, searchParam]);\n\n  return (\n    <section>\n        <SearchBox onSubmit={onSearchSubmit}/>\n        {moviesList.length > 0 && searchQuery && <MoviesList moviesList={moviesList}/>}\n    </section>\n  )\n};\n\nexport default Movies;"],"names":["BASE_URL","API_KEY","getTrendingMovies","fetch","then","res","json","getSearchMovies","searchQuery","getMovieDetails","movieId","getMovieDetailsCast","getMovieDetailsReviews","MoviesList","moviesList","location","useLocation","className","css","map","item","to","id","state","from","title","name","onSubmit","event","type","useState","isSearchQuery","isMoviesList","useSearchParams","searchParam","isSearchParam","useEffect","get","results","preventDefault","currentQuery","target","value","query","length"],"sourceRoot":""}